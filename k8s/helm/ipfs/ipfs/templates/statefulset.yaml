apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "ipfs.fullname" . }}
  labels:
    app: {{ template "ipfs.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ template "ipfs.servicename" . }}
  template:
    metadata:
      labels:
        app: {{ template "ipfs.name" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
    spec:
      #securityContext:
        # The image runs as uid 1000 by default, and needs to be able to write to
        # the persistent volume to be able to start.
        #fsGroup: 1000
        #runAsUser: 1000
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image }}
        ports:
        - containerPort: 5001
          name: api
        - containerPort: 8080
          name: gateway
        volumeMounts:
          - name: ipfs-storage
            mountPath: /data/ipfs
      {{- if .Values.ipfscluster.enabled }}
      - name: cluster-{{ .Chart.Name }}
        image: {{ .Values.ipfscluster.image }}
        env:
        - name: CLUSTER_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "ipfs.fullname" . }}-ipfs-cluster-secret
              key: CLUSTER_SECRET
        - name: IPFS_API
          value: /ip4/127.0.0.1/tcp/5001
        ports:
        - containerPort: 9094
          name: api
        - containerPort: 9095
          name: gateway
        - containerPort: 9096
          name: tcp
        volumeMounts:
          - name: ipfs-storage
            mountPath: /data/ipfs-cluster
      - name: ipfs-cluster-sidecar
        image: joshorig/ipfs-cluster-k8s-sidecar
        env:
          - name: IPFSCLUSTER_SIDECAR_POD_LABELS
            value: "app={{ template "ipfs.name" . }},release={{ .Release.Name }}"
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
      {{- end }}

  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: ipfs-storage
        annotations:
          volume.beta.kubernetes.io/storage-class: "{{ .Values.persistence.storageClass }}"
      spec:
        accessModes:
          {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
  {{- else }}
      volumes:
        - name: ipfs-storage
          emptyDir: {}
  {{- end }}
